# --- БАЗА ЗНАНИЙ С ШАБЛОННЫМИ ОТВЕТАМИ (ОЧИЩЕННАЯ) ---

TEMPLATES = {
    "ru": {
        "question": {
            "default": "Здравствуйте! Спасибо за ваш вопрос. Чтобы мы могли помочь, уточните, пожалуйста, детали.",
            "роуминг": "Для подключения роуминга наберите *125*1#. Обратите внимание, что на старых SIM-картах (IMSI 40107) услуга может быть недоступна, рекомендуется замена SIM.",
            "интернет": "Пожалуйста, перезагрузите устройство. Если это не помогло, убедитесь, что на балансе достаточно средств и проверьте настройки точки доступа (APN).",
            "скорость": "Для анализа причин низкой скорости, пожалуйста, напишите нам в личные сообщения ваш точный адрес, а также дату и время, когда наблюдались трудности.",
            "тариф": "Информацию о смене тарифа вы можете найти в личном кабинете или мобильном приложении. Если у вас возникли трудности, мы готовы помочь.",
            "imei": "Проверить статус верификации (регистрации) вашего устройства можно на гос. порталах imei.rfs.gov.kz или kz-imei.kz. Чтобы узнать IMEI, наберите *#06#.",
            "активация": "Для активации новой SIM-карты, пожалуйста, совершите звонок на номер 515 или воспользуйтесь услугой передачи данных.",
            "офис": "Адреса и время работы наших офисов можно найти на официальном сайте. Уточните, пожалуйста, ваш город, и мы постараемся вам помочь.",
            "заменить sim": "Замена SIM-карты стоит 300 тг и производится в абонентских отделах с удостоверением личности."
        },
        "complaint": "Добрый день. Нам очень жаль, что вы столкнулись с такой ситуацией. Пожалуйста, напишите нам в личные сообщения, чтобы мы могли разобраться в проблеме.",
        "gratitude": "Спасибо за ваш отзыв! Мы очень рады, что вам понравилось.",
        "feedback": "Благодарим за то, что поделились своим мнением! Мы обязательно учтем ваш отзыв.",
        "spam": "Комментарий был скрыт, так как он нарушает правила сообщества.",
        "insult": "Комментарий был скрыт, так как он содержит оскорбительную лексику."
    },
    "kk": {
        "question": {
            "default": "Сәлеметсіз бе! Сұрағыңызға рахмет. Көмектесу үшін, мән-жайды нақтылап жібересіз бе.",
            "imei": "IMEI-кодтың мәртебесін тексеріп, құрылғыны өз бетіңізше верификациялау үшін мемлекеттік базаға кіріңіз: https://kz-imei.kz. Құрылғының IMEI-кодын білу үшін *#06# пәрменін теріңіз.",
             "sim ауыстыру": "SIM-картаны ауыстыру құны - 300тг."
        },
        "complaint": "Қайырлы күн. Осындай жағдайға тап болғаныңызға өкінеміз. Мәселені шешу үшін, жеке хабарламаға жазуыңызды сұраймыз.",
        "gratitude": "Пікіріңізге рахмет! Сізге ұнағанына қуаныштымыз.",
        "feedback": "Пікіріңізбен бөліскеніңіз үшін алғыс айтамыз! Біз сіздің пікіріңізді міндетті түрде ескереміз.",
        "spam": "Пікір қауымдастық ережелерін бұзғандықтан жасырылды.",
        "insult": "Пікірде балағат сөздер болғандықтан, ол жасырылды."
    },
    "default": "Спасибо за ваше обращение! Thank you for your message!"
}

# --- ГЛАВНАЯ ФУНКЦИЯ ГЕНЕРАЦИИ ОТВЕТА ---

def generate_response(analysis_result: dict) -> str:
    """
    Выбирает подходящий шаблонный ответ на основе полного анализа комментария.
    """
    lang = analysis_result.get('language')
    moderation_verdict = analysis_result.get('moderation_verdict')
    comment_type = analysis_result.get('comment_type')
    original_text = analysis_result.get('text', '').lower()

    # 1. Сначала обрабатываем вердикт модерации
    if moderation_verdict in ['spam', 'insult']:
        # Используем .get() для безопасного извлечения, чтобы избежать ошибок
        return TEMPLATES.get(lang, {}).get(moderation_verdict, TEMPLATES['default'])

    # 2. Если все в порядке, обрабатываем по типу комментария
    if lang in TEMPLATES:
        lang_templates = TEMPLATES[lang]
        
        if comment_type == 'question':
            # "Умный" поиск ответа на вопрос по ключевым словам
            for keyword, answer in lang_templates.get('question', {}).items():
                if keyword in original_text:
                    return answer
            # Если ключевых слов не найдено, возвращаем ответ по умолчанию для вопроса
            return lang_templates.get('question', {}).get('default')
        
        # Для остальных типов просто возвращаем соответствующий шаблон
        return lang_templates.get(comment_type, lang_templates.get('feedback'))

    # 3. Если язык не поддерживается, возвращаем ответ по умолчанию
    return TEMPLATES['default']